name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: windows-releases
            asset_name: file-organizer-windows
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: linux-releases
            asset_name: file-organizer-linux
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: macos-releases
            asset_name: file-organizer-macos

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Build Release
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ matrix.target }}

      # Windows-specific steps
      - name: Windows Build
        if: matrix.os == 'windows-latest'
        run: |
          # Download and run rcedit
          Invoke-WebRequest -Uri "https://github.com/electron/rcedit/releases/download/v1.1.1/rcedit-x64.exe" -OutFile "rcedit.exe"
          .\rcedit.exe "target/${{ matrix.target }}/release/file-organizer.exe" `
            --set-icon "assets\icon.ico" `
            --set-version-string "FileDescription" "File Organizer" `
            --set-version-string "ProductName" "File Organizer" `
            --set-file-version "0.7.1" `
            --set-product-version "0.7.1"

          # Create installer
          Invoke-WebRequest -Uri "https://files.jrsoftware.org/is/6/innosetup-6.2.2.exe" -OutFile "innosetup.exe"
          .\innosetup.exe /VERYSILENT /SUPPRESSMSGBOXES /NORESTART /SP-
          & 'C:\Program Files (x86)\Inno Setup 6\ISCC.exe' installer.iss

          # Create portable ZIP
          cd target/${{ matrix.target }}/release
          7z a ../../../${{ matrix.asset_name }}-portable.zip file-organizer.exe
          cd ../../..

      # Linux-specific steps
      - name: Linux Build
        if: matrix.os == 'ubuntu-latest'
        run: |
          cargo install cargo-deb
          cargo deb
          mv target/debian/*.deb ${{ matrix.asset_name }}.deb

      # macOS-specific steps
      - name: macOS Build
        if: matrix.os == 'macos-latest'
        run: |
          cargo install cargo-bundle
          cargo bundle --release
          cd target/release/bundle/osx
          zip -r ../../../../${{ matrix.asset_name }}.zip *.app
          cd ../../../..

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: |
            ${{ matrix.asset_name }}*.*
            installer/*.*

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate changelog
        uses: orhun/git-cliff-action@v2
        with:
          config: cliff.toml
          args: --current --strip header
        env:
          OUTPUT: CHANGELOG.md

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/windows-releases/*
            artifacts/linux-releases/*
            artifacts/macos-releases/*
          body_path: CHANGELOG.md
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}